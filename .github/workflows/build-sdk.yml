name: Build common 3.0 SDK

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x86_64
            shell: bash

          - os: windows-latest
            platform: windows-x86_64
            shell: msys2 {0}
            env:
              CC: clang
              CXX: clang++

          - os: macos-latest
            platform: macOS-universal
            cmake_args: "-DCMAKE_OSX_ARCHITECTURES=\"arm64;x86_64\""
            shell: bash

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: 'true'

    - name: Setup Windows Environment
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          git
          patch
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-clang
          mingw-w64-ucrt-x86_64-dlfcn
          mingw-w64-ucrt-x86_64-llvm
    
    - name: Setup macOS Environment
      if: matrix.os == 'macos-latest'
      run: |
        echo "CC=$(brew --prefix llvm@18)/bin/clang" >> "$GITHUB_ENV"
        echo "CXX=$(brew --prefix llvm@18)/bin/clang++" >> "$GITHUB_ENV"

    - name: Configure CMake
      run: cmake ${{ matrix.cmake_args || '' }} -B build
      env: ${{ matrix.env || fromJSON('{}') }}

    - name: Build
      run: cmake --build build

    - name: Create SDK
      run: cmake --install build

    - name: Bundle SDK
      run: tar -czf common-3.0.sdk-${{ matrix.platform }}.tar.gz -C build common-3.0.sdk

    - uses: actions/upload-artifact@v4
      with:
        name: common-3.0.sdk-${{ matrix.platform }}
        path: common-3.0.sdk-${{ matrix.platform }}.tar.gz

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: common-3.0.sdk-${{ matrix.platform }}.tar.gz

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x86_64
          - os: windows-latest
            platform: windows-x86_64
          - os: macos-latest
            platform: macOS-universal
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup macOS Environment
      if: matrix.os == 'macos-latest'
      run: |
        echo "CC=$(brew --prefix llvm@18)/bin/clang" >> "$GITHUB_ENV"
        echo "CXX=$(brew --prefix llvm@18)/bin/clang++" >> "$GITHUB_ENV"
    
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    
    - name: Clone zlib Repository
      uses: actions/checkout@v5
      with:
        repository: touchHLE/zlib-dylib
        submodules: 'true'
    
    - name: Download SDK Artifact
      uses: actions/download-artifact@v4
      with:
        name: common-3.0.sdk-${{ matrix.platform }}

    - name: Extract SDK
      run: tar -xzf common-3.0.sdk-${{ matrix.platform }}.tar.gz

    - name: Configure zlib CMake Project
      run: cmake -DCMAKE_TOOLCHAIN_FILE="common-3.0.sdk/cmake/Toolchain/common-3.0.cmake" -S . -B build -G "Ninja"

    - name: Build zlib
      run: cmake --build build
