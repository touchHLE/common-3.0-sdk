cmake_minimum_required(VERSION 3.15)

if(NOT CMAKE_C_COMPILER)
    if(DEFINED ENV{CC})
        set(CMAKE_C_COMPILER $ENV{CC})
    else()
        set(CMAKE_C_COMPILER clang)
    endif()
endif()

if(NOT CMAKE_CXX_COMPILER)
    if(DEFINED ENV{CXX})
        set(CMAKE_CXX_COMPILER $ENV{CXX})
    else()
        set(CMAKE_CXX_COMPILER clang++)
    endif()
endif()
set(CMAKE_GENERATOR "Ninja")

project(common-3.0-sdk)

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set_property(CACHE CMAKE_INSTALL_PREFIX PROPERTY VALUE "${CMAKE_BINARY_DIR}/common-3.0.sdk")
endif()

set(SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/sources")
set(CSU_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/sources/csu")
set(HEADERS_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/sources/sdk-headers")

include(${CMAKE_CURRENT_LIST_DIR}/cmake/sdk_headers.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/extra_headers.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/cctools_port.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/csu.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/sdk_libs.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/libc_stub.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/cmake_toolchain.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/cmake/licenses.cmake)
